#!/usr/bin/env python3
import asyncio
from tcp import Servidor
import re


def validar_nome(nome):
    return re.match(br'^[a-zA-Z][a-zA-Z0-9_-]*$', nome) is not None


def sair(conexao):
    print(conexao, 'conexão fechada')
    conexao.fechar()


def dados_recebidos(conexao, dados):
	if dados == b'':
		return sair(conexao)
	#chamada do tratamento do caso 2
	while dados[-1] != b'':
		print("entrou no while")
		dados = data_treatment(conexao, dados)
		
	for dado in dados:
		print("entrou no for")
		comando = dado.split(b' ', 1)[0] # recebe a primeira palavra da conexao

		if comando == b'PING':
			itsPing(conexao, dado)


	print(conexao, dados)

# TRATAMENTO DO CASO 1
def itsPing (conexao, dados):
    
    resposta= b':server PONG server :'
    resposta+= dados.split(b' ', 1)[1] # resposta recebe resposta padrão + payload
    conexao.enviar(resposta)

def conexao_aceita(conexao):
    print(conexao, 'nova conexão')
    conexao.registrar_recebedor(dados_recebidos)
    
    conexao.dados_residuais = b''

# TRATAMENTO DO CASO 2
def data_treatment(conexao, dados):

	if b'\n' in dados:
		dados = dados.split(b"\n")
		for i in range(len(dados) - 1):
			dados[i] = dados[i] + b'\n'
			print("DADOS AQUI OOOOOOOOOOOOOOOOOOOOOOOOO ",dados)
		
		if dados[-1] != b'' and conexao.dados_residuais == b'':
			conexao.dados_residuais = dados[-1]
			dados[-1] = b''
		else:
			dados[-1] = conexao.dados_residuais + dados[-1]
			conexao.dados_residuais = b''
		return dados
		
# FIM DO CASO 2	

servidor = Servidor(6667)
servidor.registrar_monitor_de_conexoes_aceitas(conexao_aceita)
asyncio.get_event_loop().run_forever()
